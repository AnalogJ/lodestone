###############################################################################
# Default Docker Compose configuration
###############################################################################
# This is the default docker-compose configuration for Lodestone.
# You can use it to have a working Lodestone setup out of the box
#
# Visit http://localhost to view the Lodestone dashboard

version: '2.2'
services:
  elasticsearch:
    image: lodestonehq/lodestone-elasticsearch:latest
    environment:
      #- bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  document_processor:
    image: lodestonehq/lodestone-document-processor:latest
    volumes:
      - ./data/storage/tmp:/tmp
    depends_on:
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      webapp:
        condition: service_healthy
      tika:
        condition: service_healthy
    command:
    - /lodestone-document-processor
    - start
    - --amqp-url=amqp://lodestone:lodestone@rabbitmq:5672
    - --api-endpoint=http://webapp:3000
    - --tika-endpoint=http://tika:9998
    - --elasticsearch-endpoint=http://elasticsearch:9200
    
  thumbnail_processor:
    image: lodestonehq/lodestone-thumbnail-processor:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
      webapp:
        condition: service_healthy
    command:
    - /usr/bin/lodestone-thumbnail-processor
    - start
    - --amqp-url=amqp://lodestone:lodestone@rabbitmq:5672
    - --api-endpoint=http://webapp:3000
  
  webapp:
    image: lodestonehq/lodestone-ui:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
      storage:
        condition: service_healthy
    ports:
      - 80:3000
    environment:
      - LS_STORAGE_HOST=${LS_STORAGE_HOST:-storage}
      - LS_STORAGE_PORT=${LS_STORAGE_PORT:-9000}
      - LS_STORAGE_PATH=${LS_STORAGE_PATH:-/storage/}
      - LS_ELASTICSEARCH_HOST=${LS_ELASTICSEARCH_HOST:-elasticsearch}
      - LS_ELASTICSEARCH_PORT=${LS_ELASTICSEARCH_PORT:-9200}
      - LS_RABBITMQ_HOST=${LS_RABBITMQ_HOST:-rabbitmq}
      - LS_RABBITMQ_PORT=${LS_RABBITMQ_PORT:-5672}
      - LS_RABBITMQ_MG_HOST=${LS_RABBITMQ_MG_HOST:-rabbitmq}
      - LS_RABBITMQ_MG_PORT=${LS_RABBITMQ_MG_PORT:-15672}
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone

  fs_publisher:
    image: lodestonehq/lodestone-fs-publisher:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    command:
    - /lodestone-fs-publisher
    - start
    - --amqp-url=amqp://lodestone:lodestone@rabbitmq:5672
    - --dir=/data
    - --bucket=documents
    volumes:
    - ./data/storage/documents:/data

  # E-mail publisher is currently WIP.
  # email_publisher:
    # image: lodestonehq/lodestone-email-publisher:latest
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    #   webapp:
    #     condition: service_healthy
    # command:
    # - /lodestone-email-publisher
    # - start
    # - --amqp-url=amqp://lodestone:lodestone@rabbitmq:5672
    # - --api-endpoint=http://webapp:3000
    # - --bucket=documents
    # - --imap-hostname=imap.gmail.com
    # - --imap-username=xxxx@gmail.com
    # - --imap-password=xxxxxxxxxxxxxx

  storage:
    image: minio/minio:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
    - ./data/storage:/data
    command:
    - minio
    - server
    - /data
    environment:
    # - MINIO_BROWSER=off
    - MINIO_ACCESS_KEY=minio
    - MINIO_SECRET_KEY=minio123
    - MINIO_NOTIFY_AMQP_ENABLE=on
    - MINIO_NOTIFY_AMQP_URL=amqp://lodestone:lodestone@rabbitmq:5672
    - MINIO_NOTIFY_AMQP_EXCHANGE=lodestone
    - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE=fanout
    - MINIO_NOTIFY_AMQP_ROUTING_KEY=storagelogs
    - MINIO_NOTIFY_AMQP_MANDATORY=off
    - MINIO_NOTIFY_AMQP_AUTO_DELETED=off
    - MINIO_NOTIFY_AMQP_DELIVERY_MODE=0
    healthcheck:
      test: ["CMD", "curl", "--silent", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 25s
      retries: 5
      start_period: 2s

  rabbitmq:
    image: lodestonehq/lodestone-rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=lodestone
      - RABBITMQ_DEFAULT_PASS=lodestone

  tika:
    image: lodestonehq/lodestone-tika:latest

